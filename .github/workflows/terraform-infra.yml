name: Terraform Infrastructure CI/CD

on:
  push:
    branches:
      - main
    paths:
      - 'terraform/**' # Trigger only when files in terraform directory change
      - '.github/workflows/terraform-infra.yml' # Or when this workflow itself changes

env:
  # Set ARM_CLIENT_ID, ARM_CLIENT_SECRET, ARM_SUBSCRIPTION_ID, ARM_TENANT_ID as GitHub secrets
  # These are used by Terraform AzureRM provider for authentication if not using azure/login
  # However, using azure/login is often preferred for more features.
  # TF_LOG: "DEBUG" # Uncomment for detailed Terraform logging if needed
  TF_WORKING_DIR: "terraform" # Set working directory for Terraform commands

jobs:
  apply_infrastructure:
    name: Terraform Apply
    runs-on: ubuntu-latest
    # environment: production # Optional: if using GitHub environments

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: "1.6.5" # Specify your desired Terraform version
          # terraform_wrapper: true # Optional: if you want to use the wrapper

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZ_CRED }} # Assumes AZ_CRED secret is configured (JSON output of `az ad sp create-for-rbac`)

      - name: Terraform Init
        run: terraform init -input=false
        working-directory: ${{ env.TF_WORKING_DIR }}

      - name: Terraform Validate
        run: terraform validate
        working-directory: ${{ env.TF_WORKING_DIR }}

      - name: Terraform Plan
        id: plan
        run: terraform plan -input=false -no-color -out=tfplan
        working-directory: ${{ env.TF_WORKING_DIR }}
        # Continue on error to allow plan output even if there are diffs that would cause an error code
        # continue-on-error: true 

      # Optional: Add a step to output the plan, e.g., for pull request comments
      # - name: Show Plan
      #   run: terraform show -no-color tfplan
      #   working-directory: ${{ env.TF_WORKING_DIR }}

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push' # Only apply on direct push to main
        run: terraform apply -auto-approve -input=false tfplan
        working-directory: ${{ env.TF_WORKING_DIR }}
```
