apiVersion: apps/v1
kind: Deployment # For production, consider a StatefulSet
metadata:
  name: {{ include "postgresql.fullname" . }}
  labels:
    {{- include "postgresql.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "postgresql.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "postgresql.selectorLabels" . | nindent 8 }}
    spec:
      # serviceAccountName: {{ include "postgresql.serviceAccountName" . }} # If using a service account
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: POSTGRES_USER
              value: {{ .Values.postgresql.username | quote }}
            - name: POSTGRES_PASSWORD
              value: {{ .Values.postgresql.password | quote }}
            - name: POSTGRES_DB
              value: {{ .Values.postgresql.database | quote }}
            # PGDATA can be set if you change the data directory inside the container
            # - name: PGDATA
            #   value: "/var/lib/postgresql/data/pgdata"
          ports:
            - name: postgresql
              containerPort: 5432 # PostgreSQL default port
              protocol: TCP
          # livenessProbe:
          #   exec:
          #     command:
          #       - pg_isready
          #       - -U
          #       - {{ .Values.postgresql.username }}
          #       - -d
          #       - {{ .Values.postgresql.database }}
          #   initialDelaySeconds: 30
          #   timeoutSeconds: 5
          # readinessProbe:
          #   exec:
          #     command:
          #       - pg_isready
          #       - -U
          #       - {{ .Values.postgresql.username }}
          #       - -d
          #       - {{ .Values.postgresql.database }}
          #   initialDelaySeconds: 5
          #   timeoutSeconds: 1
          # resources:
          #   {{- toYaml .Values.resources | nindent 12 }}
          {{- if .Values.persistence.enabled }}
          volumeMounts:
            - name: postgresql-data
              mountPath: /var/lib/postgresql/data # Default data directory
          {{- end }}
      {{- if .Values.persistence.enabled }}
      volumes:
        - name: postgresql-data
          persistentVolumeClaim:
            claimName: {{ include "postgresql.fullname" . }}-pvc
      {{- end }}
